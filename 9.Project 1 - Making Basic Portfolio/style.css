html {
    box-sizing: border-box;
}

*,*::before,*::after {
    box-sizing: inherit;
} 


/*! If we want to reuse the same CSS value in multiple places, we can create a variable to store that value. Then we can use the variable instead of repeating the actual value every time. */ 

/*? We use :root pseudo class selector which was means the root element same as html element but this :root selector has high precedance as compare so every css variables we are create under the root folder only  */
:root {
    --Limesicle:#F2EBBF;
    /*! We create variable with the help of double hyphen symbol */
    --Morning-green:#8CBEB2;
    --Jacqueline-color:#5C4B51;
    --Crunch:#F3B562;
    --Dubarry:#F06060;
    /* Above we see how we declare the variable now let understand how can we use this variables value */
}


/* Let use this css variables */
body {
    background-color: var(--Limesicle);
    /*! We var function in css to use our css variable values and apply styling to that  */
    margin: 0;
    padding: 0;
    /* We set our padding & margin to 0 pixels and  because all of the browser was also give default margin and padding to some elements and we want to style our elements manually so initially or default we give this both 0 px. */
    color: black;
} 


/*? Now this all headings tags h1,h2,h3,h4,h5,h6 have the extra margin was giving to top and bottom and this margin was given in em which was css unit for font-size.  */
/* There are more types of css unit the main two units was em & rem  */ 
/*? em css unit  */
/* The em CSS unit is a relative font-size unit that is based on the font size of its parent element. When used by child elements, it calculates size relative to the parent. The 1em = 16px default and we can change that also. */ 

/*? rem css unit */
/* The rem css unit was also relative font-size unit that is based on the font-size of root element of our html document which was html element and all the children of root element inherit that font-size. here also 1rem = 16px only. */ 

/*! This rem & em was relative units was scalable as compare to pixels which was absolute unit so we mainly use rem than em unit for font-size. */ 

h1,h2,h3,h4,h5,h6 {
    margin: 0;
    border: 2px solid red;
    margin: 10px;
} 

#about-me {
    border: 2px solid red;
    margin: 5px;
} 

/*? Now in our intro section the h2 element i give  margin 10px on bottom 7 similarly i give margin 5px on top so vertically whenver we apply margin than that margin was bigger that was applied and les or minimum margin was not applied that concept was called as "margin collapse" in which bigger margin apply as compare to other margin. */